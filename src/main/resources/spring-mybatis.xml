<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!-- 数据源 -->
	<bean id="dataSource"
		class="com.alibaba.druid.pool.DruidDataSource" init-method="init"
		destroy-method="close">
		<!-- 基本属性 url、user、password -->
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />

		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="${druid.initialSize}" />
		<property name="minIdle" value="${druid.minIdle}" />
		<property name="maxActive" value="${druid.maxActive}" />

		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="${druid.maxWait}" />

		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis"
			value="${druid.timeBetweenEvictionRunsMillis}" />

		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis"
			value="${druid.minEvictableIdleTimeMillis}" />

		<property name="validationQuery"
			value="${druid.validationQuery}" />
		<property name="testWhileIdle" value="${druid.testWhileIdle}" />
		<property name="testOnBorrow" value="${druid.testOnBorrow}" />
		<property name="testOnReturn" value="${druid.testOnReturn}" />

		<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
		<property name="poolPreparedStatements"
			value="${druid.poolPreparedStatements}" />
		<property name="maxPoolPreparedStatementPerConnectionSize"
			value="${druid.maxPoolPreparedStatementPerConnectionSize}" />

		<!-- 配置监控统计拦截的filters -->
		<property name="filters" value="${druid.filters}" />
	</bean>
	
	<bean id="sqlSessionFactory" class="com.baomidou.mybatisplus.spring.MybatisSqlSessionFactoryBean">
		<!-- 配置数据源 -->
		<property name="dataSource" ref="dataSource" />
		
		<!-- 配置 Mybatis 配置文件（可无） -->
		<property name="configLocation" value="classpath:mybatis-config.xml" />
		<property name="configurationProperties">
			<props>
				<prop key="dbType">${jdbc.dbType}</prop>
			</props>
		</property>
		
		<!-- 配置xml自动扫描 -->
		<property name="mapperLocations" value="classpath:mappers/**/*.xml" />
		
		<!-- 配置别名包 -->
		<property name="typeAliasesPackage" value="com.exam.system.modules.*.entitys" />
		
		<!-- 插件配置 -->
	    <property name="plugins">
	        <array>
	            <!-- 分页插件配置, 参考文档分页插件部分！！ -->
	            <!-- 如需要开启其他插件，可配置于此 -->
	        </array>
	    </property>
	    
	    <!-- MP 全局配置注入 -->
	    <!-- <property name="globalConfig" ref="globalConfig"/> -->
	</bean>
	
	<!-- 定义 MP 全局策略 -->
	<!-- <bean id="globalConfig" class="com.baomidou.mybatisplus.generator.config.GlobalConfig">
		<property name="idType" value="2"/>
	    <property name="logicDeleteValue" value="1"/>
	    <property name="logicNotDeleteValue" value="0"/>
		<property name="dateType" value="${jdbc.dbType}"></property>
	</bean> -->
	
	<!-- 配置扫描Dao接口包，动态实现Dao接口，注入到Spring容器中 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
		<property name="basePackage" value="com.exam.system.modules.*.mappers" />
	</bean>
	
	<!-- 配置事务管理器 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- 热加载 -->
	<bean class="com.baomidou.mybatisplus.spring.MybatisMapperRefresh">
		<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory" />
		<constructor-arg name="mapperLocations" value="classpath:/mappers/**/*.xml" />
		<constructor-arg name="enabled" value="true" />
	</bean>
	
	<!-- 开启事物的注解 -->
	<tx:annotation-driven transaction-manager="transactionManager" />
</beans>
